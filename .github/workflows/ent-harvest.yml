name: ENT harvest (stage 1â€“2)

on:
  workflow_dispatch: {}
  schedule:
    - cron: '00 6 1 * *'  # run 03:17 UTC on the 1st of each month

jobs:
  run-notebook:
    permissions:
      contents: write        # needed to commit outputs back
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install papermill nbconvert requests pandas python-dateutil tenacity tqdm ipykernel

      - name: Install Python kernel
        run: python -m ipykernel install --user

      # Optional: pass a date window from cron; override inside the notebook via os.environ
      - name: Run articlesRetrieval notebook
        env:
          UNPAYWALL_EMAIL: ${{ secrets.UNPAYWALL_EMAIL }}
        run: |
          papermill articlesRetrieval.ipynb articlesRetrieval.out.ipynb

      - name: Organize outputs by month
        run: |
          OUT_DIR=$(date -u +'%Y/%m')
          echo "OUT_DIR=$OUT_DIR" >> $GITHUB_ENV
          mkdir -p "$OUT_DIR"

          move_if_exists() {
            for file in "$@"; do
              if [ -f "$file" ]; then
                mv "$file" "$OUT_DIR/"
              fi
            done
          }

          move_if_exists ent_raw_results.csv ent_all_results.json articlesRetrieval.out.ipynb
          move_if_exists ent_curated.csv ent_report.md

      - name: Commit outputs
        run: |
          git config user.name  "ent-bot"
          git config user.email "ent-bot@users.noreply.github.com"

          git add "$OUT_DIR"
          git add -u

          git commit -m "ENT harvest: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "Nothing to commit"
          git push


      - name: Upload artifacts (backup, even if nothing new to commit)
        uses: actions/upload-artifact@v4
        with:
          name: ent-harvest-${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/ent_raw_results.csv
            ${{ env.OUT_DIR }}/ent_all_results.json
            ${{ env.OUT_DIR }}/ent_curated.csv
            ${{ env.OUT_DIR }}/ent_report.md
            ${{ env.OUT_DIR }}/articlesRetrieval.out.ipynb
          if-no-files-found: ignore
